{"version":3,"file":"static/js/18.2271b73a.chunk.js","mappings":"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","sources":["jsx/pages/LoginForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Container, Form, Button, Alert } from 'react-bootstrap';\r\nimport logo from '../../../src/images/uncubate-logo.png';\r\nimport { useDispatch, connect } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { loginAction, loadingToggleAction } from '../../store/actions/AuthActions';\r\n\r\nconst LoginForm = (props) => {\r\n    const [email, setEmail] = useState('demo@demo.com');\r\n    const [password, setPassword] = useState('123456');\r\n    const [errors, setErrors] = useState({ email: '', password: '' });\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let error = false;\r\n        const errorObj = { email: '', password: '' };\r\n\r\n        if (email === '') {\r\n            errorObj.email = 'Email is required';\r\n            error = true;\r\n        }\r\n        if (password === '') {\r\n            errorObj.password = 'Password is required';\r\n            error = true;\r\n        }\r\n\r\n        setErrors(errorObj);\r\n        if (error) return;\r\n\r\n        dispatch(loadingToggleAction(true));\r\n        dispatch(loginAction(email, password, navigate));\r\n    };\r\n\r\n    return (\r\n        <Container className=\"d-flex flex-column align-items-center justify-content-center min-vh-100\" style={{ backgroundColor: '#333' }} fluid>\r\n            <div className=\"text-center mb-4\">\r\n                <img src={logo} alt=\"Uncubate Logo\" style={{ width: '280px', height: '120px' }} />\r\n            </div>\r\n\r\n            <div className=\"bg-white p-4 rounded shadow-sm\" style={{ maxWidth: '450px', width: '100%' }}>\r\n                <h3 className=\"text-center mb-4 text-primary pb-2\">Login</h3>\r\n\r\n                {props.errorMessage && <Alert variant=\"danger\">{props.errorMessage}</Alert>}\r\n                {props.successMessage && <Alert variant=\"success\">{props.successMessage}</Alert>}\r\n\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group controlId=\"formEmail\" className=\"mb-3\">\r\n                        <Form.Control\r\n                            type=\"email\"\r\n                            placeholder=\"Email\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            isInvalid={!!errors.email}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">{errors.email}</Form.Control.Feedback>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formPassword\" className=\"mb-3\">\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            isInvalid={!!errors.password}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">{errors.password}</Form.Control.Feedback>\r\n                    </Form.Group>\r\n\r\n                    <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                        <Form.Check label=\"Remember my preference\" />\r\n                        <a href=\"/forgot-password\" className=\"text-primary\">\r\n                            Lost your password?\r\n                        </a>\r\n                    </div>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\" className=\"w-100\">\r\n                        Sign In\r\n                    </Button>\r\n                </Form>\r\n\r\n                <div className=\"text-center mt-3\">\r\n                    <p className=\"text-muted\" style={{ fontSize: '14px' }}>\r\n                        Don’t have an account?{' '}\r\n                        <a href=\"/page-register\" className=\"text-primary\">\r\n                            Sign up\r\n                        </a>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"text-center mt-4\">\r\n                <p className=\"text-muted\" style={{ fontSize: '14px' }}>\r\n                    ©2017 All Rights Reserved. Stimulus Consultancy Pvt Ltd.\r\n                </p>\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    errorMessage: state.auth.errorMessage,\r\n    successMessage: state.auth.successMessage,\r\n    showLoading: state.auth.showLoading,\r\n});\r\n\r\nexport default connect(mapStateToProps)(LoginForm);\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { Container, Form, Button, Alert } from 'react-bootstrap';\r\n// import logo from '../../../src/images/uncubate-logo.png';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// const LoginForm = () => {\r\n//     const [email, setEmail] = useState('');\r\n//     const [password, setPassword] = useState('');\r\n//     const [validated, setValidated] = useState(false);\r\n//     const navigate = useNavigate();\r\n\r\n//     const handleSubmit = (e) => {\r\n//         navigate('/dashboard');  // Admin Dashboard\r\n//         e.preventDefault();\r\n//         setValidated(true);\r\n//     };\r\n\r\n//     return (\r\n//         <Container className=\"d-flex flex-column align-items-center justify-content-center min-vh-100\" style={{ backgroundColor: '#333' }} fluid>\r\n//             <div className=\"text-center mb-4\">\r\n//                 <img src={logo} alt=\"Uncubate Logo\" style={{ width: '320px', height: '150px' }} />\r\n//             </div>\r\n\r\n//             <div className=\"bg-white p-4 rounded shadow-sm\" style={{ maxWidth: '400px', width: '100%' }}>\r\n//                 <h3 className=\"text-center mb-4 text-primary pb-2\">Login</h3>\r\n\r\n//                 <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n//                     <Form.Group controlId=\"formEmail\" className=\"mb-3\">\r\n//                         <Form.Control\r\n//                             required\r\n//                             type=\"email\"\r\n//                             placeholder=\"Email\"\r\n//                             value={email}\r\n//                             onChange={(e) => setEmail(e.target.value)}\r\n//                             isInvalid={validated && !email}\r\n//                         />\r\n//                         <Form.Control.Feedback type=\"invalid\">\r\n//                             The email address is required and cannot be empty\r\n//                         </Form.Control.Feedback>\r\n//                     </Form.Group>\r\n\r\n//                     <Form.Group controlId=\"formPassword\" className=\"mb-3\">\r\n//                         <Form.Control\r\n//                             required\r\n//                             type=\"password\"\r\n//                             placeholder=\"Password\"\r\n//                             value={password}\r\n//                             onChange={(e) => setPassword(e.target.value)}\r\n//                             isInvalid={validated && !password}\r\n//                         />\r\n//                         <Form.Control.Feedback type=\"invalid\">\r\n//                             The password is required and cannot be empty\r\n//                         </Form.Control.Feedback>\r\n//                     </Form.Group>\r\n\r\n//                     <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n//                         <Button variant=\"light\" type=\"submit\" onClick={handleSubmit}>\r\n//                             Log in\r\n//                         </Button>\r\n//                         <a href=\"/forgot-password\" className=\"text-primary\">\r\n//                             Lost your password?\r\n//                         </a>\r\n//                     </div>\r\n//                 </Form>\r\n//             </div>\r\n\r\n//             <div className=\"text-center mt-4\">\r\n//                 <p className=\"text-muted\" style={{ fontSize: '14px' }}>\r\n//                     ©2017 All Rights Reserved. Stimulus Consultancy Pvt Ltd.\r\n//                 </p>\r\n//             </div>\r\n//         </Container>\r\n//     );\r\n// };\r\n\r\n// export default LoginForm;\r\n"],"names":["connect","state","errorMessage","auth","successMessage","showLoading","props","email","setEmail","useState","password","setPassword","errors","setErrors","dispatch","useDispatch","navigate","useNavigate","_jsxs","Container","className","style","backgroundColor","fluid","children","_jsx","src","logo","alt","width","height","maxWidth","Alert","variant","Form","onSubmit","e","preventDefault","error","errorObj","loadingToggleAction","loginAction","Group","controlId","Control","type","placeholder","value","onChange","target","isInvalid","Feedback","Check","label","href","Button","fontSize"],"sourceRoot":""}